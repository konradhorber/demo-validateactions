name: Deploy Node.js App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t my-node-app:${{ github.sha }} .

      - name: Set image tag output
        id: meta
        run: echo "image-tag=my-node-app:${GITHUB_SHA}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get image tag
        run: echo "Deploying image ${{ needs.build.outputs.image-tag }}"

      - name: Save Docker image
        run: docker save ${{ needs.build.outputs.image-tag }} | gzip > my-node-app.tar.gz

      - name: Copy image to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "my-node-app.tar.gz"
          target: "~/deploy/"

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/deploy
            gunzip -f my-node-app.tar.gz
            docker load < my-node-app.tar
            docker stop my-node-app || true
            docker rm my-node-app || true
            docker run -d --name my-node-app -p 3000:3000 ${{ needs.build.outputs.image-tag }}
